{"version":3,"sources":["webpack:///./src/app/content/AuthHeader.js","webpack:///./src/app/content/AuthLayout.js","webpack:///./src/app/components/ContactGroupIcon.js","webpack:///./src/app/components/ContactsList.js","webpack:///./src/app/helpers/vcard.js","webpack:///./src/app/helpers/property.js","webpack:///./src/app/components/ContactImageField.js","webpack:///./src/app/constants.js","webpack:///./src/app/components/ContactAdrField.js","webpack:///./src/app/components/ContactFieldProperty.js","webpack:///./src/app/helpers/field.js","webpack:///./src/app/components/ContactLabelProperty.js","webpack:///./src/app/components/ContactModalLabel.js","webpack:///./src/app/components/ContactImageModal.js","webpack:///./src/app/components/ContactModalRow.js","webpack:///./src/app/components/ContactModalProperties.js","webpack:///./src/app/components/ContactPromote.js","webpack:///./src/app/components/ContactModal.js","webpack:///./src/app/components/ContactSummary.js","webpack:///./src/app/components/ContactGroupDropdown.js","webpack:///./src/app/components/ContactViewProperty.js","webpack:///./src/app/components/ContactViewProperties.js","webpack:///./src/app/components/ContactView.js","webpack:///./src/app/components/Contact.js","webpack:///./src/app/components/ContactPlaceholder.js","webpack:///./src/app/containers/ContactsContainer.js","webpack:///./src/app/content/AuthenticatedAppRoutes.js"],"names":["AuthHeader","createModal","useModals","react_default","a","createElement","className","href","xmlns","aria-labelledby","width","height","d","id","textAnchor","x","y","focusable","htmlFor","c","t","_templateObject","type","placeholder","_templateObject2","aria-current","viewBox","role","aria-hidden","xlinkHref","onClick","react_components","AuthLayout","_ref","children","_useContactGroups","useContactGroups","_useContactGroups2","slicedToArray_default","contactGroups","list","icon","text","AuthLayout_templateObject","link","AuthLayout_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","concat","map","_ref2","Name","Color","ID","color","Fragment","content_AuthHeader","es_Route","path","render","ContactGroupIcon","name","title","withRouter","contacts","onCheck","history","contactID","listRef","useRef","containerRef","_useState","useState","_useState2","lastChecked","setLastChecked","_useState3","_useState4","setHeight","_useState5","_useState6","setWidth","mapContactGroups","reduce","acc","contactGroup","Object","create","handleCheck","target","shiftKey","getAttribute","contactIDs","start","findIndex","_ref3","end","_ref4","slice","Math","min","max","push","apply","toConsumableArray_default","_ref5","checked","handleClick","onResize","current","clientHeight","offsetWidth","useEffect","timeoutID","setTimeout","index","_ref7","scrollToRow","document","addEventListener","clearTimeout","removeEventListener","ref","List_default","rowRenderer","_ref6","style","_contacts$index","_contacts$index$Label","LabelIDs","emails","isChecked","initial","getInitial","key","onChange","data-contact-id","length","labelID","_mapContactGroups$lab","components_ContactGroupIcon","join","addPlus","rowCount","rowHeight","ONE_ORE_MORE_MUST_BE_PRESENT","ONE_OR_MORE_MAY_BE_PRESENT","PROPERTIES","fn","cardinality","n","nickname","photo","bday","anniversary","gender","adr","tel","email","impp","lang","tz","geo","logo","org","member","related","categories","note","prodid","rev","sound","uid","clientpidmap","url","version","fburl","caladruri","caluri","getValue","property","values","getValues","val","toString","isMultiValue","parse","vcard","arguments","undefined","ICAL","Component","getAllProperties","getParameter","pref","splitted","split","field","startsWith","isCustomField","prop","group","value","merge","properties","forEach","_ref2$cardinality","includes","find","clearType","toLowerCase","replace","getType","types","Array","isArray","formatAdr","filter","Boolean","trim","ContactImageField","src","size","OTHER_INFORMATION_FIELDS","ContactAdrField","address","setAddress","handleChange","newAddress","ContactAdrField_templateObject","ContactAdrField_templateObject2","ContactAdrField_templateObject3","ContactAdrField_templateObject4","ContactAdrField_templateObject5","ContactAdrField_templateObject6","_templateObject7","ContactFieldProperty","rest","objectWithoutProperties_default","extends_default","components_ContactAdrField","m","moment","isValid","setDefaultDate","defaultDate","toDate","onSelect","date","format","localeData","longDateFormat","components_ContactImageField","ContactLabelProperty","LABELS","work","field_templateObject","home","field_templateObject2","cell","field_templateObject3","field_templateObject4","field_templateObject5","field_templateObject6","field_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","label","FIELDS","ContactModalLabel","OPTIONS","ContactModalLabel_templateObject","ContactModalLabel_templateObject2","ContactModalLabel_templateObject3","ContactModalLabel_templateObject4","ContactModalLabel_templateObject5","ContactModalLabel_templateObject6","ContactModalLabel_templateObject7","ContactModalLabel_templateObject8","ContactModalLabel_templateObject9","ContactModalLabel_templateObject10","ContactModalLabel_templateObject11","ContactModalLabel_templateObject12","ContactModalLabel_templateObject13","ContactModalLabel_templateObject14","ContactModalLabel_templateObject15","fields","ContactModalLabel_templateObject16","ContactModalLabel_templateObject17","ContactModalLabel_templateObject18","ContactModalLabel_templateObject19","ContactModalLabel_templateObject20","ContactModalLabel_templateObject21","ContactModalLabel_templateObject22","ContactModalLabel_templateObject23","ContactModalLabel_templateObject24","ContactModalLabel_templateObject25","_templateObject26","_templateObject27","_templateObject28","components_ContactLabelProperty","options","defaultProps","ContactImageModal","initialUrl","onSubmit","onClose","setUrl","ContactImageModal_templateObject","createNotification","useNotifications","submit","ContactImageModal_templateObject3","ContactImageModal_templateObject4","ContactImageModal_templateObject5","ContactImageModal_templateObject6","accept","file","files","reader","FileReader","onloadend","asyncToGenerator_default","regenerator_default","mark","_callee","base64str","wrap","_context","prev","next","resizeImage","result","sent","t0","ContactImageModal_templateObject2","stop","readAsDataURL","ContactImageModal_templateObject7","ContactModalRow","onAdd","onRemove","onMoveUp","onMoveDown","first","last","canAdd","canDelete","canMoveUp","canMoveDown","canClear","canEdit","ContactModalRow_templateObject","ContactModalRow_templateObject2","ContactModalRow_templateObject3","ContactModalRow_templateObject4","ContactModalRow_templateObject5","ContactModalRow_templateObject6","components_ContactImageModal","components_ContactModalLabel","components_ContactFieldProperty","ICONS","other","ContactModalProperties","allProperties","TITLES","ContactModalProperties_templateObject","ContactModalProperties_templateObject2","ContactModalProperties_templateObject3","ContactModalProperties_templateObject4","ContactModalProperties_templateObject5","iconName","components_ContactModalRow","ContactPromote","ContactPromote_templateObject","learnMore","ContactPromote_templateObject2","ContactPromote_templateObject3","DEFAULT_MODEL","UID_PREFIX","ContactModal","initialProperties","_useUser","useUser","hasPaidMail","objectSpread_default","generateUID","formatModel","setProperties","ContactModal_templateObject","ContactModal_templateObject2","handleRemove","propertyUID","handleAdd","randomIntFromInterval","_ref5$key","newProperties","params","clearModel","console","log","ContactModal_templateObject3","components_ContactModalProperties","components_ContactPromote","getFirstValue","ContactSummary","summary","component","ContactGroupDropdown","keyword","setKeyword","normalizedKeyword","normalize","_useContacts","useContacts","mapContacts","toMap","inGroup","_ref2$LabelIDs","getModel","model","setModel","groups","caret","content","ContactGroupDropdown_templateObject","autoClose","ContactGroupDropdown_templateObject2","ContactGroupDropdown_templateObject3","fill","autoFocus","ContactGroupDropdown_templateObject4","contactGroupID","indeterminate","defineProperty_default","ContactGroupDropdown_templateObject5","ContactViewProperty","alt","getContent","components_ContactGroupDropdown","ContactViewProperty_templateObject","getActions","ContactViewProperties","ContactViewProperties_templateObject","ContactViewProperties_templateObject2","ContactViewProperties_templateObject3","ContactViewProperties_templateObject4","_useContactEmails","useContactEmails","contactEmails","filteredContactEmails","ContactID","toExclude","_ref4$LabelIDs","_ref5$Email","Email","components_ContactViewProperty","ContactView","errors","ContactView_templateObject","components_ContactModal","ContactView_templateObject2","filename","fieldWithGroup","Property","setValues","setValue","setParameter","addProperty","toICAL","blob","Blob","downloadFile","ContactView_templateObject3","components_ContactSummary","components_ContactViewProperties","CLEAR_TEXT","CONTACT_CARD_TYPE","ENCRYPTED_AND_SIGNED","ENCRYPTED","SIGNED","decryptSigned","Data","Signature","publicKeys","privateKeys","message","signature","data","Promise","all","getMessage","getSignature","decryptMessage","armor","verified","abrupt","error","_x","_x2","this","signed","_ref9","_callee2","_ref8","_ref10","_context2","verifyMessage","createCleartextMessage","_x3","_x4","decrypt","_ref13","_callee3","_ref11","_ref12","_context3","_x5","_x6","ACTIONS","_ACTIONS","_ref14","prepareContact","_ref15","_callee4","contact","keys","Cards","_data$reduce","vcards","_context4","card","Type","_ref16","_x7","_x8","Contact","_ref17","userKeysList","api","useApi","loading","setLoading","_userKeysList$reduce","_ref18","privateKey","isDecrypted","toPublic","request","_ref19","_callee5","_ref20","_Contact","_ref21","_properties","_errors","_context5","getContact","components_ContactView","ContactPlaceholder","ContactPlaceholder_templateObject","ContactPlaceholder_templateObject2","ContactPlaceholder_templateObject3","ContactPlaceholder_templateObject4","ContactPlaceholder_templateObject5","ContactPlaceholder_templateObject6","Link","to","ContactPlaceholder_templateObject7","ContactsContainer","_useContactEmails2","loadingContactEmails","_useContacts2","loadingContacts","checkedContacts","setCheckedContacts","user","_useUserKeys","useUserKeys","_useUserKeys2","loadingUserKeys","update","formattedContacts","BrowserRouter","Switch","Route","match","components_ContactsList","components_Contact","components_ContactPlaceholder","NotFoundContainer","hot","content_AuthLayout","location"],"mappings":"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","file":"5.093bb8a7.chunk.js","sourcesContent":["import React from 'react';\nimport { c } from 'ttag';\nimport { useModals, AuthenticatedBugModal } from 'react-components';\n\nconst AuthHeader = () => {\n    const { createModal } = useModals();\n    const handleClick = () => createModal(<AuthenticatedBugModal />);\n    return (\n        <header className=\"header flex flex-nowrap reset4print\">\n            <a href=\"/\" className=\"logo-container nodecoration flex-item-centered-vert\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"logo\"\n                    aria-labelledby=\"logo__title plan\"\n                    width=\"148\"\n                    height=\"36\"\n                >\n                    <g>\n                        <path d=\"M28.51 15.9h-2.26v6.456h-2.466V4.776h4.673c4.337 0 6.985 1.735 6.985 5.435 0 4.107-2.882 5.69-6.933 5.69zm.207-9.236H26.25v7.323h2.467c2.363 0 4.103-.74 4.103-3.75 0-2.629-1.714-3.573-4.103-3.573zm9.633 15.692V8.909h2.077l.286 2.577c.779-1.888 1.973-2.883 3.583-2.883.441 0 .935.051 1.35.153l-.441 2.297a4.363 4.363 0 0 0-1.195-.154c-1.713 0-2.804 1.71-3.271 3.573v7.884zm14.307-14.06c3.894 0 6.075 2.757 6.075 7.018 0 4.158-2.233 7.042-6.101 7.042-3.895 0-6.102-2.756-6.102-7.017 0-4.159 2.233-7.042 6.128-7.042zm0 1.889c-2.285 0-3.558 1.633-3.558 5.154 0 3.496 1.247 5.129 3.532 5.129s3.53-1.633 3.53-5.154c0-3.496-1.245-5.129-3.504-5.129zm16.565 11.252c-.83.612-1.921.919-3.064.919-2.544 0-3.687-1.582-3.687-3.904v-8.063h-2.18V8.603h2.18V5.567l2.39-.28v3.316h3.452l-.285 1.786H64.86v8.037c0 1.353.442 1.99 1.636 1.99.597 0 1.142-.178 1.817-.586zm7.167-13.14c3.894 0 6.075 2.756 6.075 7.017 0 4.158-2.233 7.042-6.101 7.042-3.895 0-6.102-2.756-6.102-7.017 0-4.159 2.233-7.042 6.128-7.042zm0 1.888c-2.285 0-3.558 1.633-3.558 5.154 0 3.496 1.247 5.129 3.532 5.129 2.284 0 3.53-1.633 3.53-5.154 0-3.496-1.246-5.129-3.504-5.129zm12.021 12.17h-2.388V8.91h2.05l.183 1.837c1.116-1.377 2.752-2.143 4.362-2.143 2.648 0 3.713 1.48 3.713 3.98v9.773h-2.39v-9.62c0-1.607-.57-2.296-2.128-2.296-1.48 0-2.675 1.123-3.402 2.169zm26.562 0l-.779-9.006a93.98 93.98 0 0 1-.285-5.843h-.104l-3.999 12.987h-2.363l-4.154-12.987h-.104c0 .587-.052 3.572-.234 5.843l-.7 9.007h-2.337l1.48-17.58h3.323l3.92 12.834h.105l3.79-12.834h3.35l1.48 17.58zm15.293-3.342c0 1.072.312 1.455 1.013 1.71l-.571 1.633c-1.22-.153-2.103-.69-2.519-1.888-.96 1.275-2.415 1.888-4.076 1.888-2.753 0-4.44-1.659-4.44-4.16 0-2.78 2.285-4.337 6.439-4.337h1.766v-1.046c0-1.888-.961-2.602-2.96-2.602-.91 0-2.181.204-3.584.688l-.623-1.735c1.688-.612 3.22-.867 4.57-.867 3.48 0 4.985 1.658 4.985 4.388zm-2.388-.28v-3.317h-1.636c-2.934 0-3.947 1.046-3.947 2.679 0 1.658.753 2.5 2.467 2.5 1.298 0 2.337-.689 3.116-1.862zm7.945-12.886c-.987 0-1.662-.688-1.662-1.607 0-.893.675-1.582 1.662-1.582.986 0 1.687.689 1.687 1.582 0 .919-.7 1.607-1.687 1.607zm-1.195 16.509V8.909h2.389v13.447zm11.399-.46c-.598.281-1.247.46-1.948.46-1.636 0-2.804-.919-2.804-3.215V3.194l2.389-.28v16.43c0 .766.26 1.073.857 1.073.337 0 .623-.051.882-.154z\" />\n                        <path d=\"M8.263-.121S1.413-.343 0 7.125v5.086s.058.545 1.616 1.65c1.558 1.106 5.59 4.219 6.647 4.219 1.056 0 5.089-3.113 6.646-4.22 1.558-1.104 1.617-1.65 1.617-1.65V7.126C15.113-.343 8.263-.121 8.263-.121zm4.69 10.019h-9.38V7.125c.951-3.708 4.69-3.76 4.69-3.76s3.738.052 4.69 3.76z\" />\n                        <path d=\"M8.263 19.225s-1.062-.102-1.893-.67C5.54 17.99 0 14.1 0 14.1v7.7s.047.896 1.05.896h14.425c1.004 0 1.05-.895 1.05-.895v-7.7s-5.539 3.89-6.37 4.456c-.83.567-1.892.67-1.892.67z\" />\n                    </g>\n                    <title id=\"logo__title\">ProtonMail</title>\n                    <text textAnchor=\"end\" className=\"plan uppercase bold\" x=\"147\" y=\"36\" id=\"plan\" focusable=\"false\">\n                        Plus\n                    </text>\n                </svg>\n            </a>\n            <div className=\"searchbox-container relative flex-item-centered-vert\">\n                <label htmlFor=\"global_search\">\n                    <span className=\"sr-only\">{c('Placeholder').t`Search`}</span>\n                    <input\n                        type=\"search\"\n                        id=\"global_search\"\n                        placeholder={c('Placeholder').t`Search`}\n                        className=\"pm-field w100 searchbox-field \"\n                    />\n                </label>\n            </div>\n            <div className=\"topnav-container flex-item-centered-vert flex-item-fluid\">\n                <ul className=\"topnav-list unstyled mt0 mb0 ml1 flex flex-nowrap\">\n                    <li className=\"mr1\">\n                        <a\n                            href=\"https://mail.protonmail.com/\"\n                            className=\"topnav-link inline-flex flex-nowrap nodecoration rounded\"\n                            aria-current=\"true\"\n                        >\n                            <svg\n                                viewBox=\"0 0 16 16\"\n                                className=\"icon-16p topnav-icon mr0-5 flex-item-centered-vert fill-white\"\n                                role=\"img\"\n                                focusable=\"false\"\n                                aria-hidden=\"true\"\n                            >\n                                <use xlinkHref=\"#shape-email\" />\n                            </svg>\n                            Mailbox\n                        </a>\n                    </li>\n                    <li className=\"mr1\">\n                        <a href=\"/settings/\" className=\"topnav-link inline-flex flex-nowrap nodecoration rounded\">\n                            <svg\n                                viewBox=\"0 0 16 16\"\n                                className=\"icon-16p topnav-icon mr0-5 flex-item-centered-vert fill-white\"\n                                role=\"img\"\n                                focusable=\"false\"\n                                aria-hidden=\"true\"\n                            >\n                                <use xlinkHref=\"#shape-settings-master\" />\n                            </svg>\n                            Settings\n                        </a>\n                    </li>\n                    <li className=\"mr1\">\n                        <button\n                            onClick={handleClick}\n                            className=\"topnav-link inline-flex flex-nowrap nodecoration rounded\"\n                        >\n                            <svg\n                                viewBox=\"0 0 16 16\"\n                                className=\"icon-16p topnav-icon mr0-5 flex-item-centered-vert fill-white\"\n                                role=\"img\"\n                                focusable=\"false\"\n                                aria-hidden=\"true\"\n                            >\n                                <use xlinkHref=\"#shape-support1\" />\n                            </svg>\n                            Support\n                        </button>\n                    </li>\n                </ul>\n            </div>\n        </header>\n    );\n};\n\nexport default AuthHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router';\nimport { Sidebar, useContactGroups, Loader } from 'react-components';\nimport { c } from 'ttag';\n\nimport AuthHeader from './AuthHeader';\n\nconst AuthLayout = ({ children }) => {\n    const [contactGroups, loading] = useContactGroups();\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    const list = [\n        {\n            icon: 'contacts',\n            text: c('Link').t`Contacts`,\n            link: '/contacts'\n        },\n        {\n            icon: 'import',\n            text: c('Action').t`Import`,\n            type: 'button',\n            onClick() {}\n        },\n        {\n            icon: 'export',\n            text: c('Action').t`Export`,\n            type: 'button',\n            onClick() {}\n        },\n        {\n            icon: 'merge',\n            text: c('Action').t`Merge`,\n            type: 'button',\n            onClick() {}\n        },\n        {\n            icon: 'delete',\n            text: c('Action').t`Delete all`,\n            type: 'button',\n            onClick() {}\n        },\n        {\n            icon: 'contacts-group',\n            text: c('Link').t`Group`,\n            type: 'button',\n            onClick() {}\n        }\n    ].concat(\n        contactGroups.map(({ Name, Color, ID }) => ({\n            icon: 'contacts-groups',\n            color: Color,\n            text: Name,\n            link: `/contacts/group/${ID}`\n        }))\n    );\n\n    return (\n        <>\n            <AuthHeader />\n            <div className=\"flex flex-nowrap\">\n                <Route path=\"/:path\" render={() => <Sidebar list={list} />} />\n                <div className=\"main flex-item-fluid main-area\">\n                    <div className=\"toolbar noprint\" />\n                    <div className=\"flex flex-nowrap\">{children}</div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nAuthLayout.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport default AuthLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'react-components';\n\nconst ContactGroupIcon = ({ name, color }) => {\n    return <Icon title={name} name=\"contacts-groups\" color={color} />;\n};\n\nContactGroupIcon.propTypes = {\n    name: PropTypes.string,\n    color: PropTypes.string\n};\n\nexport default ContactGroupIcon;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, useContactGroups } from 'react-components';\nimport { withRouter } from 'react-router';\nimport { addPlus, getInitial } from 'proton-shared/lib/helpers/string';\nimport List from 'react-virtualized/dist/commonjs/List';\n\nimport ContactGroupIcon from './ContactGroupIcon';\n\nconst ContactsList = ({ contacts, onCheck, history, contactID }) => {\n    const listRef = useRef(null);\n    const containerRef = useRef(null);\n    const [lastChecked, setLastChecked] = useState(); // Store ID of the last contact ID checked\n    const getHeight = () => containerRef.current.clientHeight;\n    const getWidth = () => containerRef.current.offsetWidth;\n    const [contactGroups] = useContactGroups();\n    const [height, setHeight] = useState(0);\n    const [width, setWidth] = useState(0);\n    const mapContactGroups = contactGroups.reduce((acc, contactGroup) => {\n        acc[contactGroup.ID] = contactGroup;\n        return acc;\n    }, Object.create(null));\n\n    const handleCheck = ({ target, shiftKey }) => {\n        const contactID = target.getAttribute('data-contact-id');\n        const contactIDs = [contactID];\n\n        if (lastChecked && shiftKey) {\n            const start = contacts.findIndex(({ ID }) => ID === contactID);\n            const end = contactID.findIndex(({ ID }) => ID === lastChecked);\n            const contactIDs = contacts.slice(Math.min(start, end), Math.max(start, end) + 1);\n            contactIDs.push(...contacts.slice(Math.min(start, end), Math.max(start, end) + 1).map(({ ID }) => ID));\n        }\n\n        setLastChecked(contactID);\n        onCheck(contactIDs, target.checked);\n    };\n\n    const handleClick = (ID) => () => history.push(`/contacts/${ID}`);\n\n    const Row = ({\n        index, // Index of row within collection\n        style // Style object to be applied to row (to position it)\n    }) => {\n        const { ID, Name, LabelIDs = [], emails, isChecked } = contacts[index];\n        const initial = getInitial(Name);\n        return (\n            <div\n                style={style}\n                key={ID}\n                className={`item-container  bg-global-white  ${contactID === ID ? 'item-is-selected' : ''}`}\n            >\n                <div className=\"flex flex-nowrap\">\n                    <label className=\"item-icon flex-item-noshrink rounded50 bg-white inline-flex\">\n                        <span className=\"mauto item-abbr\">{initial}</span>\n                        <Checkbox\n                            checked={isChecked}\n                            className=\"item-checkbox sr-only\"\n                            onChange={handleCheck}\n                            data-contact-id={ID}\n                        />\n                    </label>\n                    <div\n                        className=\"flex-item-fluid flex flex-column flex-spacebetween conversation-titlesender\"\n                        onClick={handleClick(ID)}\n                    >\n                        <div className=\"flex\">\n                            <div className={`flex-item-fluid w0 ${LabelIDs.length ? 'pr1' : ''}`}>\n                                <span className=\"bold inbl mw100 ellipsis\">{Name}</span>\n                            </div>\n                            {LabelIDs.length ? (\n                                <div>\n                                    {LabelIDs.map((labelID) => {\n                                        const { Color, Name } = mapContactGroups[labelID];\n                                        return <ContactGroupIcon key={labelID} name={Name} color={Color} />;\n                                    })}\n                                </div>\n                            ) : null}\n                        </div>\n                        <div className=\"mw100 ellipsis\" title={emails.join(', ')}>\n                            {addPlus(emails)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    Row.propTypes = {\n        key: PropTypes.string,\n        index: PropTypes.number,\n        style: PropTypes.string\n    };\n\n    const onResize = () => {\n        setHeight(getHeight());\n        setWidth(getWidth());\n    };\n\n    useEffect(() => {\n        const timeoutID = setTimeout(() => {\n            onResize();\n\n            if (contactID) {\n                const index = contacts.findIndex(({ ID }) => contactID === ID);\n                listRef.current.scrollToRow(index);\n            }\n        }, 200);\n\n        document.addEventListener('resize', onResize);\n\n        return () => {\n            clearTimeout(timeoutID);\n            document.removeEventListener('resize', onResize);\n        };\n    }, []);\n\n    return (\n        <div ref={containerRef} className=\"items-column-list\">\n            <List\n                ref={listRef}\n                rowRenderer={Row}\n                rowCount={contacts.length}\n                rowHeight={76}\n                height={height}\n                width={width}\n            />\n        </div>\n    );\n};\n\nContactsList.propTypes = {\n    contacts: PropTypes.array,\n    onCheck: PropTypes.func,\n    history: PropTypes.object.isRequired,\n    contactID: PropTypes.string\n};\n\nexport default withRouter(ContactsList);\n","import ICAL from 'ical.js';\nimport { generateUID } from 'react-components/helpers/component';\n\nconst ONE_ORE_MORE_MUST_BE_PRESENT = '1*';\nconst EXACTLY_ONE_MUST_BE_PRESENT = '1';\nconst EXACTLY_ONE_MAY_BE_PRESENT = '*1';\nconst ONE_OR_MORE_MAY_BE_PRESENT = '*';\n\nconst PROPERTIES = {\n    fn: { cardinality: ONE_ORE_MORE_MUST_BE_PRESENT },\n    n: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    nickname: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    photo: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    bday: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    anniversary: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    gender: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    adr: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    tel: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    email: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    impp: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    lang: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    tz: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    geo: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    title: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    role: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    logo: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    org: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    member: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    related: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    categories: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    note: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    prodid: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    rev: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    sound: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    uid: { cardinality: EXACTLY_ONE_MAY_BE_PRESENT },\n    clientpidmap: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    url: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    version: { cardinality: EXACTLY_ONE_MUST_BE_PRESENT },\n    key: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    fburl: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    caladruri: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT },\n    caluri: { cardinality: ONE_OR_MORE_MAY_BE_PRESENT }\n};\n\nexport const getAllFields = () => Object.keys(PROPERTIES);\nexport const isCustomField = (field = '') => field.startsWith('x-');\n\nexport const getValue = (property) => {\n    const values = property.getValues().map((val) => {\n        if (typeof val === 'string') {\n            return val;\n        }\n\n        return val.toString();\n    });\n    return property.isMultiValue ? values : values[0];\n};\n\n/**\n * Parse vCard String an return contact properties model as an Array\n * @param {String} vcard to parse\n * @returns {Array} contact properties\n */\nexport const parse = (vcard = '') => {\n    const comp = new ICAL.Component(ICAL.parse(vcard));\n    const properties = comp.getAllProperties();\n\n    return properties.reduce((acc, property) => {\n        const type = property.getParameter('type');\n        const pref = property.getParameter('pref');\n        const splitted = property.name.split('.');\n        const field = splitted[1] ? splitted[1] : splitted[0];\n\n        // Ignore invalid field\n        if (!field) {\n            return acc;\n        }\n\n        const isCustom = isCustomField(field);\n\n        // Ignore invalid property\n        if (!isCustom && !PROPERTIES[field]) {\n            return acc;\n        }\n\n        const group = splitted[1] ? splitted[0] : undefined;\n        const prop = { pref, field, group, type, value: getValue(property) };\n\n        acc.push(prop);\n\n        return acc;\n    }, []);\n};\n\n/**\n * Parse contact properties to create a ICAL vcard component\n * @param {Array} contact properties\n * @returns {ICAL.Component} vcard\n */\nexport const toICAL = (properties = []) => {\n    return properties.reduce((component, { field, type, value, group }) => {\n        const fieldWithGroup = [group, field].filter(Boolean).join('.');\n        const property = new ICAL.Property(fieldWithGroup);\n        property.isMultiValue ? property.setValues(value) : property.setValue(value);\n        type && property.setParameter('type', type);\n        component.addProperty(property);\n        return component;\n    }, new ICAL.Component('vcard'));\n};\n\n/**\n * Merge multiple contact properties\n * order matters\n * @param {Array} contacts\n * @returns {Array} contact properties\n */\nexport const merge = (contacts = []) => {\n    return contacts.reduce((acc, properties) => {\n        properties.forEach((property) => {\n            const { field } = property;\n            const { cardinality = ONE_OR_MORE_MAY_BE_PRESENT } = PROPERTIES[field] || {};\n\n            if ([ONE_ORE_MORE_MUST_BE_PRESENT, ONE_OR_MORE_MAY_BE_PRESENT].includes(cardinality)) {\n                acc.push(property);\n            } else if (!acc.find(({ field: f }) => f === field)) {\n                acc.push(property);\n            }\n        });\n        return acc;\n    }, []);\n};\n\nexport const orderProperties = (properties) => {};\n","export const clearType = (type = '') => type.toLowerCase().replace('x-', '');\n\nexport const getType = (types = []) => {\n    if (Array.isArray(types)) {\n        if (!types.length) {\n            return '';\n        }\n        return types[0];\n    }\n    return types;\n};\n\nexport const getValue = (values = []) => values.join(', ');\n\nexport const getValues = (contact = {}, fields = []) => {\n    return fields.reduce((acc, field) => {\n        const properties = contact[field] || [];\n\n        if (properties.length) {\n            properties.forEach((property) => {\n                acc.push(...property.value);\n            });\n        }\n\n        return acc;\n    }, []);\n};\n\nexport const formatAdr = (adr = '') => {\n    return adr\n        .split(',')\n        .filter(Boolean)\n        .map((value) => value.trim())\n        .join(', ');\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'react-components';\n\nconst ContactImageField = ({ value }) => {\n    return <div className=\"mb1\">{value ? <img src={value} /> : <Icon name=\"contact\" size={40} />}</div>;\n};\n\nContactImageField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func\n};\n\nexport default ContactImageField;\n","export const CONTACT_IMG_SIZE = 128;\nexport const POST_BOX = 0;\nexport const EXTENDED = 1;\nexport const STREET = 2;\nexport const LOCALITY = 3;\nexport const REGION = 4;\nexport const POSTAL_CODE = 5;\nexport const COUNTRY = 6;\n\nexport const OTHER_INFORMATION_FIELDS = [\n    'bday',\n    'anniversary',\n    'gender',\n    'lang',\n    'tz',\n    'geo',\n    'title',\n    'role',\n    'photo',\n    'logo',\n    'org',\n    'member',\n    'note',\n    'url'\n];\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'react-components';\nimport { c } from 'ttag';\n\nimport { POST_BOX, EXTENDED, STREET, LOCALITY, REGION, POSTAL_CODE, COUNTRY } from '../constants';\n\nconst ContactAdrField = ({ value, onChange }) => {\n    const [address, setAddress] = useState(value.split(','));\n\n    const handleChange = (index) => ({ target }) => {\n        const newAddress = [...address];\n        newAddress[index] = target.value;\n        setAddress(newAddress);\n        onChange(newAddress.join(','));\n    };\n\n    return (\n        <>\n            <div>\n                <label className=\"small opacity-50\" htmlFor=\"street\">{c('Label').t`Street address`}</label>\n                <Input id=\"street\" value={address[STREET]} onChange={handleChange(STREET)} />\n            </div>\n            <div>\n                <label className=\"small opacity-50\" htmlFor=\"locality\">{c('Label').t`City`}</label>\n                <Input id=\"locality\" value={address[LOCALITY]} onChange={handleChange(LOCALITY)} />\n            </div>\n            <div>\n                <label className=\"small opacity-50\" htmlFor=\"region\">{c('Label').t`Region`}</label>\n                <Input id=\"region\" value={address[REGION]} onChange={handleChange(REGION)} />\n            </div>\n            <div>\n                <label className=\"small opacity-50\" htmlFor=\"postalCode\">{c('Label').t`Postal code`}</label>\n                <Input id=\"postalCode\" value={address[POSTAL_CODE]} onChange={handleChange(POSTAL_CODE)} />\n            </div>\n            <div>\n                <label className=\"small opacity-50\" htmlFor=\"country\">{c('Label').t`Country`}</label>\n                <Input id=\"country\" value={address[COUNTRY]} onChange={handleChange(COUNTRY)} />\n            </div>\n            {address[POST_BOX] ? (\n                <div>\n                    <label className=\"small opacity-50\" htmlFor=\"postBox\">{c('Label').t`Post office box`}</label>\n                    <Input id=\"postBox\" value={address[POST_BOX]} onChange={handleChange(POST_BOX)} />\n                </div>\n            ) : null}\n            {address[EXTENDED] ? (\n                <div>\n                    <label className=\"small opacity-50\" htmlFor=\"extended\">{c('Label').t`Extended address`}</label>\n                    <Input id=\"extended\" value={address[EXTENDED]} onChange={handleChange(EXTENDED)} />\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nContactAdrField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func\n};\n\nexport default ContactAdrField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Input, TextArea, EmailInput, DateInput } from 'react-components';\n\nimport ContactImageField from './ContactImageField';\nimport ContactAdrField from './ContactAdrField';\n\nconst ContactFieldProperty = ({ field, value, uid, onChange, ...rest }) => {\n    const handleChange = ({ target }) => onChange({ value: target.value, uid });\n    const val = Array.isArray(value) ? value[0] : value;\n\n    if (field === 'email') {\n        <EmailInput value={val} onChange={handleChange} {...rest} />;\n    }\n\n    if (field === 'adr') {\n        const handleChangeAdr = (adr) => onChange({ value: adr, uid });\n        return <ContactAdrField value={val} onChange={handleChangeAdr} />;\n    }\n\n    if (field === 'note') {\n        return <TextArea value={val} onChange={handleChange} {...rest} />;\n    }\n\n    if (field === 'bday' || field === 'anniversary') {\n        const m = moment(val);\n        if (m.isValid()) {\n            const handleSelectDate = (date) => onChange({ value: date, uid });\n            return (\n                <DateInput\n                    setDefaultDate\n                    defaultDate={m.toDate()}\n                    onSelect={handleSelectDate}\n                    format={moment.localeData().longDateFormat('L')}\n                    {...rest}\n                />\n            );\n        }\n    }\n\n    if (field === 'photo' || field === 'logo') {\n        const handleChangeImage = (url) => onChange({ value: url, uid });\n        return <ContactImageField value={val} onChange={handleChangeImage} {...rest} />;\n    }\n\n    return <Input value={val} onChange={handleChange} {...rest} />;\n};\n\nContactFieldProperty.propTypes = {\n    field: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    value: PropTypes.oneOf(PropTypes.string, PropTypes.arrayOf(PropTypes.string)),\n    onChange: PropTypes.func.isRequired\n};\n\nexport default ContactFieldProperty;\n","import { c } from 'ttag';\n\nexport const getLabels = () => ({\n    work: c('Label').t`Work`,\n    home: c('Label').t`Personal`,\n    cell: c('Label').t`Mobile`,\n    email: c('Label').t`Email`,\n    photo: c('Label').t`Photo`,\n    org: c('Label').t`Organization`,\n    tel: c('Label').t`Phone`,\n    adr: c('Label').t`Address`,\n    bday: c('Label').t`Birthday`,\n    anniversary: c('Label').t`Anniversary`,\n    title: c('Label').t`Title`,\n    role: c('Label').t`Role`,\n    note: c('Label').t`Note`,\n    fn: c('Label').t`Name`,\n    url: c('Label').t`URL`,\n    gender: c('Label').t`Gender`,\n    lang: c('Label').t`Language`,\n    tz: c('Label').t`Timezone`,\n    geo: c('Label').t`Geo`,\n    logo: c('Label').t`Logo`,\n    member: c('Label').t`Member`,\n    impp: c('Label').t`IMPP`,\n    related: c('Label').t`Related`,\n    categories: c('Label').t`Categories`,\n    sound: c('Label').t`Sound`\n});\n\nexport const getIcons = () => ({\n    email: 'email',\n    org: 'organization',\n    tel: 'phone',\n    adr: 'address',\n    bday: 'birthday',\n    anniversary: 'anniversary',\n    title: 'title',\n    role: 'role',\n    note: 'note',\n    url: 'domains',\n    gender: 'gender',\n    lang: 'alias', // TODO icon missing\n    tz: 'alias', // TODO icon missing\n    geo: 'domains',\n    logo: 'photo',\n    member: 'member-contact'\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'react-components';\n\nimport { getLabels } from '../helpers/field';\n\nconst ContactLabelProperty = ({ field, type, ...rest }) => {\n    const LABELS = getLabels();\n    const label = LABELS[type] || type || LABELS[field];\n\n    return (\n        <Label className=\"capitalize\" {...rest}>\n            {label}\n        </Label>\n    );\n};\n\nContactLabelProperty.propTypes = {\n    field: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n};\n\nexport default ContactLabelProperty;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { c } from 'ttag';\nimport { Select, Label } from 'react-components';\n\nimport ContactLabelProperty from './ContactLabelProperty';\n\nconst FIELDS = ['email', 'tel', 'adr']; // List of field where we let the user change the type\n\nconst ContactModalLabel = ({ field, uid, type, onChange }) => {\n    const handleChangeType = ({ target }) => onChange({ value: target.value, key: 'type', uid });\n    const handleChangeField = ({ target }) => onChange({ value: target.value, key: 'field', uid });\n\n    const OPTIONS = {\n        email: [\n            { text: c('Property type').t`Email`, value: '' },\n            { text: c('Property type').t`Home`, value: 'home' },\n            { text: c('Property type').t`Work`, value: 'work' },\n            { text: c('Property type').t`Other`, value: 'other' }\n        ],\n        tel: [\n            { text: c('Property type').t`Phone`, value: '' },\n            { text: c('Property type').t`Home`, value: 'home' },\n            { text: c('Property type').t`Professional`, value: 'professional' },\n            { text: c('Property type').t`Other`, value: 'other' },\n            { text: c('Property type').t`Mobile`, value: 'cell' },\n            { text: c('Property type').t`Main`, value: 'main' },\n            { text: c('Property type').t`Fax`, value: 'fax' }\n        ],\n        adr: [\n            { text: c('Property type').t`Address`, value: '' },\n            { text: c('Property type').t`Home`, value: 'home' },\n            { text: c('Property type').t`Work`, value: 'work' },\n            { text: c('Property type').t`Other`, value: 'other' }\n        ],\n        fields: [\n            { text: c('Property field').t`Birthday`, value: 'bday' },\n            { text: c('Property field').t`Anniversary`, value: 'anniversary' },\n            { text: c('Property field').t`Gender`, value: 'gender' },\n            { text: c('Property field').t`Language`, value: 'lang' },\n            { text: c('Property field').t`Timezone`, value: 'tz' },\n            { text: c('Property field').t`Geo`, value: 'geo' },\n            { text: c('Property field').t`Title`, value: 'title' },\n            { text: c('Property field').t`Role`, value: 'role' },\n            { text: c('Property field').t`Logo`, value: 'logo' },\n            { text: c('Property field').t`Org`, value: 'org' },\n            { text: c('Property field').t`Member`, value: 'member' },\n            { text: c('Property field').t`Note`, value: 'note' },\n            { text: c('Property field').t`URL`, value: 'url' }\n        ]\n    };\n\n    if (OPTIONS[field] && !OPTIONS[field].map(({ value }) => value).includes(type)) {\n        return <ContactLabelProperty field={field} type={type} />;\n    }\n\n    if (FIELDS.includes(field)) {\n        return (\n            <Label className=\"pt0\">\n                <Select value={type} options={OPTIONS[field]} onChange={handleChangeType} />\n            </Label>\n        );\n    }\n\n    return (\n        <Label className=\"pt0\">\n            <Select value={field} options={OPTIONS.fields} onChange={handleChangeField} />\n        </Label>\n    );\n};\n\nContactModalLabel.propTypes = {\n    field: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nContactModalLabel.defaultProps = {\n    type: ''\n};\n\nexport default ContactModalLabel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { c } from 'ttag';\nimport { FormModal, Row, Label, Field, FileInput, Input, useNotifications } from 'react-components';\nimport { resizeImage } from 'proton-shared/lib/helpers/image';\nimport { CONTACT_IMG_SIZE } from '../constants';\n\nconst ContactImageModal = ({ url: initialUrl, onSubmit, onClose, ...rest }) => {\n    const [url, setUrl] = useState(initialUrl);\n    const title = c('Title').t`Edit image`;\n    const { createNotification } = useNotifications();\n    const handleChange = ({ target }) => setUrl(target.value);\n\n    const handleSubmit = () => {\n        onSubmit(url);\n        onClose();\n    };\n\n    const handleUpload = ({ target }) => {\n        const file = target.files[0];\n        const reader = new FileReader();\n\n        reader.onloadend = async () => {\n            try {\n                const base64str = await resizeImage(reader.result, CONTACT_IMG_SIZE, 'image/jpeg', 0.7);\n                onSubmit(base64str);\n                onClose();\n            } catch (error) {\n                createNotification({ text: c('Error').t`Image upload failed`, type: 'error' });\n                throw error;\n            }\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    return (\n        <FormModal title={title} onSubmit={handleSubmit} submit={c('Action').t`Save`} onClose={onClose} {...rest}>\n            <Row>\n                <Label htmlFor=\"contactImageModal-input-url\">{c('Label').t`Add image URL`}</Label>\n                <Field>\n                    <Input\n                        id=\"contactImageModal-input-url\"\n                        value={url}\n                        onChange={handleChange}\n                        placeholder={c('Placeholder').t`Image URL`}\n                    />\n                </Field>\n            </Row>\n            <Row>\n                <Label htmlFor=\"contactImageModal-input-file\">{c('Label').t`Upload picture`}</Label>\n                <Field>\n                    <FileInput id=\"contactImageModal-input-file\" accept=\"image/*\" onChange={handleUpload}>{c('Action')\n                        .t`Upload picture`}</FileInput>\n                </Field>\n            </Row>\n        </FormModal>\n    );\n};\n\nContactImageModal.propTypes = {\n    url: PropTypes.string,\n    onClose: PropTypes.func,\n    onSubmit: PropTypes.func\n};\n\nContactImageModal.defaultProps = {\n    url: ''\n};\n\nexport default ContactImageModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Field, DropdownActions, useModals } from 'react-components';\nimport { c } from 'ttag';\n\nimport { clearType, getType } from '../helpers/property';\nimport ContactFieldProperty from './ContactFieldProperty';\nimport ContactModalLabel from './ContactModalLabel';\nimport ContactImageModal from './ContactImageModal';\n\nconst ContactModalRow = ({ property, onChange, onAdd, onRemove, onMoveUp, onMoveDown, first, last }) => {\n    const { createModal } = useModals();\n    const { field, uid } = property;\n    const type = clearType(getType(property.type));\n    const canAdd = !['fn'].includes(field) && last;\n    const canDelete = !['fn'].includes(field);\n    const canMoveUp = ['email'].includes(field) && !first;\n    const canMoveDown = ['email'].includes(field) && !last;\n    const canClear = ['photo', 'logo'].includes(field) && property.value;\n    const canEdit = ['photo', 'logo'].includes(field);\n\n    const list = [\n        canAdd && { text: c('Action').t`Add`, onClick: onAdd },\n        canDelete && {\n            text: c('Action').t`Delete`,\n            onClick() {\n                onRemove(property.uid);\n            }\n        },\n        canMoveUp && { text: c('Action').t`Move up`, onClick: onMoveUp },\n        canMoveDown && { text: c('Action').t`Move down`, onClick: onMoveDown },\n        canClear && {\n            text: c('Action').t`Clear`,\n            onClick() {\n                onChange({ uid, value: '' });\n            }\n        },\n        canEdit && {\n            text: c('Action').t`Edit`,\n            onClick() {\n                const handleSubmit = (value) => onChange({ uid, value });\n                createModal(<ContactImageModal url={property.value} onSubmit={handleSubmit} />);\n            }\n        }\n    ].filter(Boolean);\n\n    return (\n        <Row>\n            <ContactModalLabel field={field} type={type} uid={property.uid} onChange={onChange} />\n            <Field>\n                <ContactFieldProperty field={field} value={property.value} uid={property.uid} onChange={onChange} />\n            </Field>\n            {list.length ? (\n                <div className=\"ml1 flex flex-items-end\">\n                    <DropdownActions list={list} />\n                </div>\n            ) : null}\n        </Row>\n    );\n};\n\nContactModalRow.propTypes = {\n    property: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onAdd: PropTypes.func,\n    onRemove: PropTypes.func,\n    onMoveUp: PropTypes.func,\n    onMoveDown: PropTypes.func,\n    first: PropTypes.bool,\n    last: PropTypes.bool\n};\n\nContactModalRow.defaultProps = {\n    first: false,\n    last: false\n};\n\nexport default ContactModalRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { c } from 'ttag';\nimport { Icon } from 'react-components';\n\nimport ContactModalRow from './ContactModalRow';\nimport { OTHER_INFORMATION_FIELDS } from '../constants';\n\nconst ICONS = {\n    fn: 'contact',\n    email: 'email',\n    tel: 'phone',\n    adr: 'address',\n    other: 'info'\n};\n\nconst ContactModalProperties = ({ properties: allProperties, field, onChange, onAdd, onRemove }) => {\n    const TITLES = {\n        fn: c('Title').t`Display name`,\n        email: c('Title').t`Email addresses`,\n        tel: c('Title').t`Phone numbers`,\n        adr: c('Title').t`Addresses`,\n        other: c('Title').t`Other information`\n    };\n\n    const title = field ? TITLES[field] : TITLES.other;\n    const iconName = field ? ICONS[field] : ICONS.other;\n    const fields = field ? [field] : OTHER_INFORMATION_FIELDS;\n    const properties = allProperties.filter(({ field }) => fields.includes(field));\n\n    return (\n        <div className=\"border-bottom mb1\">\n            <h3 className=\"mb1\">\n                <Icon name={iconName} /> {title}\n            </h3>\n            {properties.map((property, index) => (\n                <ContactModalRow\n                    first={!index}\n                    last={properties.length - 1 === index}\n                    key={property.uid}\n                    property={property}\n                    onChange={onChange}\n                    onRemove={onRemove}\n                    onAdd={onAdd}\n                />\n            ))}\n        </div>\n    );\n};\n\nContactModalProperties.propTypes = {\n    field: PropTypes.string,\n    properties: PropTypes.array,\n    onChange: PropTypes.func,\n    onAdd: PropTypes.func,\n    onRemove: PropTypes.func\n};\n\nexport default ContactModalProperties;\n","import React from 'react';\nimport { c } from 'ttag';\nimport { Alert, Icon } from 'react-components';\n\nconst ContactPromote = () => {\n    return (\n        <>\n            <h3 className=\"mb1\">\n                <Icon name=\"lock\" /> {c('Title').t`Encrypted details`}\n            </h3>\n            <Alert learnMore=\"TODO\">{c('Info')\n                .t`Upgrade your plan to unlock encrypted details such as phone numbers and home addresses.`}</Alert>\n            <a href=\"/settings/dashboard\" className=\"pm-button pm-button pm-button--primary\">{c('Action')\n                .t`Upgrade`}</a>\n        </>\n    );\n};\n\nexport default ContactPromote;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormModal, useUser } from 'react-components';\nimport { c } from 'ttag';\n\nimport ContactModalProperties from './ContactModalProperties';\nimport ContactPromote from './ContactPromote';\nimport { randomIntFromInterval } from 'proton-shared/lib/helpers/function';\nimport { OTHER_INFORMATION_FIELDS } from '../constants';\nimport { generateUID } from 'react-components/helpers/component';\n\nconst DEFAULT_MODEL = [\n    { field: 'fn', value: '' },\n    { field: 'email', value: '' },\n    { field: 'tel', value: '' },\n    { field: 'adr', value: '' },\n    { field: 'org', value: '' },\n    { field: 'note', value: '' },\n    { field: 'photo', value: '' }\n];\n\n// List of field where we let the user interact with\nconst FIELDS = [\n    'fn',\n    'email',\n    'tel',\n    'adr',\n    'org',\n    'note',\n    'photo',\n    'logo',\n    'bday',\n    'anniversary',\n    'gender',\n    'title',\n    'role',\n    'member',\n    'url'\n];\n\nconst UID_PREFIX = 'contact-property';\n\nconst formatModel = (properties) => {\n    if (!properties) {\n        return DEFAULT_MODEL.map((property) => ({ ...property, uid: generateUID(UID_PREFIX) })); // Add UID to localize the property easily;\n    }\n    return properties\n        .filter(({ field }) => FIELDS.includes(field)) // Only includes editable properties that we decided\n        .map((property) => ({ ...property, uid: generateUID(UID_PREFIX) })); // Add UID to localize the property easily\n};\n\nconst clearModel = (properties) => {\n    return properties.filter(({ value }) => value);\n};\n\nconst ContactModal = ({ contactID, properties: initialProperties, ...rest }) => {\n    const [{ hasPaidMail }] = useUser();\n    const [properties, setProperties] = useState(formatModel(initialProperties));\n    const title = contactID ? c('Title').t`Edit contact details` : c('Title').t`Add new contact`;\n\n    const handleRemove = (propertyUID) => {\n        setProperties(properties.filter(({ uid }) => uid !== propertyUID));\n    };\n\n    const handleAdd = (field) => () => {\n        if (!field) {\n            // Get random field from other info\n            const index = randomIntFromInterval(0, OTHER_INFORMATION_FIELDS.length - 1);\n            return setProperties([\n                ...properties,\n                { field: OTHER_INFORMATION_FIELDS[index], value: '', uid: generateUID(UID_PREFIX) }\n            ]);\n        }\n        setProperties([...properties, { field, value: '', uid: generateUID(UID_PREFIX) }]);\n    };\n\n    const handleSubmit = () => {\n        const params = clearModel(properties);\n        console.log(params);\n    };\n\n    const handleChange = ({ uid: propertyUID, value, key = 'value' }) => {\n        const newProperties = properties.map((property) => {\n            if (property.uid === propertyUID) {\n                property[key] = value;\n            }\n            return property;\n        });\n        setProperties(newProperties);\n    };\n\n    return (\n        <FormModal onSubmit={handleSubmit} title={title} submit={c('Action').t`Save`} {...rest}>\n            <ContactModalProperties\n                properties={properties}\n                field=\"fn\"\n                onChange={handleChange}\n                onRemove={handleRemove}\n            />\n            <ContactModalProperties\n                properties={properties}\n                field=\"email\"\n                onChange={handleChange}\n                onRemove={handleRemove}\n                onAdd={handleAdd('email')}\n            />\n            {hasPaidMail ? (\n                <>\n                    <ContactModalProperties\n                        properties={properties}\n                        field=\"tel\"\n                        onChange={handleChange}\n                        onRemove={handleRemove}\n                        onAdd={handleAdd('tel')}\n                    />\n                    <ContactModalProperties\n                        properties={properties}\n                        field=\"adr\"\n                        onChange={handleChange}\n                        onRemove={handleRemove}\n                        onAdd={handleAdd('adr')}\n                    />\n                    <ContactModalProperties\n                        properties={properties}\n                        onChange={handleChange}\n                        onRemove={handleRemove}\n                        onAdd={handleAdd()}\n                    />\n                </>\n            ) : (\n                <ContactPromote />\n            )}\n        </FormModal>\n    );\n};\n\nContactModal.propTypes = {\n    contactID: PropTypes.string,\n    properties: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default ContactModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'react-components';\nimport { formatAdr } from '../helpers/property';\n\nconst getFirstValue = (properties, field) => {\n    const { value } = properties.find(({ field: f }) => f === field) || {};\n    return Array.isArray(value) ? value.join(', ') : value;\n};\n\nconst ContactSummary = ({ properties }) => {\n    const photo = getFirstValue(properties, 'photo');\n    const name = getFirstValue(properties, 'fn');\n    const email = getFirstValue(properties, 'email');\n    const tel = getFirstValue(properties, 'tel');\n    const adr = getFirstValue(properties, 'adr');\n    const org = getFirstValue(properties, 'org');\n\n    const summary = [\n        email && { icon: 'email', component: <a href={`mailto:${email}`}>{email}</a> },\n        tel && { icon: 'phone', component: <a href={`mailto:${tel}`}>{tel}</a> },\n        adr && { icon: 'address', component: formatAdr(adr) },\n        org && { icon: 'organization', component: org }\n    ].filter(Boolean);\n\n    return (\n        <div className=\"bg-global-light flex flex-nowrap p1 mb1 border-bottom\">\n            <div className=\"w20 aligncenter\">\n                {photo ? <img src={photo} className=\"rounded50\" /> : <Icon name=\"contact\" size={40} />}\n            </div>\n            <div className=\"pl1\">\n                <h2 className=\"mb0-5\">{name}</h2>\n                <ul className=\"unstyled m0\">\n                    {summary.map(({ icon, component }) => {\n                        return (\n                            <li key={icon} className=\"flex flex-items-center mb0-5\">\n                                <Icon name={icon} className=\"mr0-5\" />\n                                {component}\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nContactSummary.propTypes = {\n    properties: PropTypes.array.isRequired\n};\n\nexport default ContactSummary;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Dropdown,\n    SmallButton,\n    Icon,\n    SearchInput,\n    Checkbox,\n    useContactGroups,\n    useContacts,\n    Tooltip\n} from 'react-components';\nimport { c } from 'ttag';\nimport { normalize } from 'proton-shared/lib/helpers/string';\nimport { toMap } from 'proton-shared/lib/helpers/object';\n\nconst UNCHECKED = 0;\nconst CHECKED = 1;\nconst INDETERMINATE = 2;\n\nconst getModel = (contactGroups = [], contacts = []) => {\n    if (!contacts.length || !contactGroups.length) {\n        return Object.create(null);\n    }\n\n    return contactGroups.reduce((acc, { ID }) => {\n        const inGroup = contacts.filter(({ LabelIDs = [] }) => {\n            return LabelIDs.includes(ID);\n        });\n        acc[ID] = inGroup.length ? (contacts.length === inGroup.length ? CHECKED : INDETERMINATE) : UNCHECKED;\n        return acc;\n    }, Object.create(null));\n};\n\nconst ContactGroupDropdown = ({ className, contactIDs }) => {\n    const [keyword, setKeyword] = useState('');\n    const normalizedKeyword = normalize(keyword);\n    const [contactGroups] = useContactGroups();\n    const [contacts] = useContacts();\n    const mapContacts = toMap(contacts);\n    const [model, setModel] = useState(getModel(contactGroups, contactIDs.map((contactID) => mapContacts[contactID])));\n    const groups = normalizedKeyword.length\n        ? contactGroups.filter(({ Name }) => normalize(Name).includes(normalizedKeyword))\n        : contactGroups;\n\n    const handleCheck = (contactGroupID) => ({ target }) => {\n        setModel({ ...model, [contactGroupID]: +target.checked });\n    };\n\n    const handleApply = () => {\n        // TODO\n        console.log(model);\n    };\n\n    const handleAdd = () => {\n        // TODO\n        console.log('open modal');\n    };\n\n    return (\n        <Dropdown caret className={className} content={c('Contact group dropdown').t`Group`} autoClose={false}>\n            <div className=\"flex flex-spacebetween pt1 pl1 pr1 mb1\">\n                <strong>{c('Label').t`Add to group`}</strong>\n                <Tooltip title={c('Info').t`Create a new contact group`}>\n                    <SmallButton className=\"pm-button--primary pm-button--for-icon\" onClick={handleAdd}>\n                        <Icon name=\"contacts-groups\" fill=\"light\" />+\n                    </SmallButton>\n                </Tooltip>\n            </div>\n            <div className=\"pl1 pr1 mb1\">\n                <SearchInput\n                    value={keyword}\n                    onChange={setKeyword}\n                    autoFocus={true}\n                    placeholder={c('Placeholder').t`Filter groups`}\n                />\n            </div>\n            <div className=\"mb1\">\n                <ul className=\"unstyled m0 dropDown-contentInner\">\n                    {groups.map(({ ID, Name, Color }) => {\n                        return (\n                            <li\n                                key={ID}\n                                className=\"flex flex-spacebetween flex-nowrap border-bottom border-bottom--dashed pt0-5 pb0-5\"\n                            >\n                                <label htmlFor={ID} className=\"flex flex-nowrap\">\n                                    <Icon name=\"contacts-groups\" className=\"mr0-5\" color={Color} />\n                                    <span className=\"ellipsis\" title={Name}>\n                                        {Name}\n                                    </span>\n                                </label>\n                                <Checkbox\n                                    id={ID}\n                                    checked={model[ID] === CHECKED}\n                                    indeterminate={model[ID] === INDETERMINATE}\n                                    onChange={handleCheck(ID)}\n                                />\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n            <div className=\"aligncenter mb1\">\n                <SmallButton className=\"pm-button--primary\" onClick={handleApply}>{c('Action').t`Apply`}</SmallButton>\n            </div>\n        </Dropdown>\n    );\n};\n\nContactGroupDropdown.propTypes = {\n    className: PropTypes.string,\n    contactIDs: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default ContactGroupDropdown;\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { Row, Field, Group, ButtonGroup, Copy, useModals } from 'react-components';\nimport { c } from 'ttag';\n\nimport { clearType, getType, formatAdr } from '../helpers/property';\nimport ContactGroupIcon from './ContactGroupIcon';\nimport ContactGroupDropdown from './ContactGroupDropdown';\nimport ContactLabelProperty from './ContactLabelProperty';\n\nconst ContactViewProperty = ({ property, contactID }) => {\n    const { field, first } = property;\n    const { createModal } = useModals();\n    const type = clearType(getType(property.type));\n    const value = Array.isArray(property.value) ? property.value.join(', ') : property.value;\n\n    const getContent = () => {\n        switch (field) {\n            case 'email': {\n                return (\n                    <>\n                        <a className=\"mr0-5\" href={`mailto:${value}`}>\n                            {value}\n                        </a>\n                        {property.contactGroups.length\n                            ? property.contactGroups.map(({ Name, Color, ID }) => (\n                                  <ContactGroupIcon key={ID} name={Name} color={Color} />\n                              ))\n                            : null}\n                    </>\n                );\n            }\n            case 'tel':\n                return <a href={`tel:${value}`}>{value}</a>;\n            case 'bday':\n            case 'anniversary': {\n                const date = moment(value);\n                if (date.isValid()) {\n                    return date.format('LL');\n                }\n                return value;\n            }\n            case 'photo':\n            case 'logo':\n                return <img src={value} alt={field} />;\n            case 'adr':\n                return formatAdr(value);\n            default:\n                return value;\n        }\n    };\n\n    const getActions = () => {\n        switch (field) {\n            case 'email': {\n                const handleSettings = () => {\n                    createModal();\n                };\n\n                return (\n                    <Group>\n                        <ContactGroupDropdown className=\"pm-button--small pm-group-button\" contactIDs={[contactID]} />\n                        <ButtonGroup onClick={handleSettings} className=\"pm-button--small\">{c('Action')\n                            .t`Settings`}</ButtonGroup>\n                        <Copy className=\"pm-button--small pm-group-button\" value={value} />\n                    </Group>\n                );\n            }\n            case 'tel':\n                return <Copy className=\"pm-button--small\" value={value} />;\n            case 'adr':\n                return <Copy className=\"pm-button--small\" value={formatAdr(value)} />;\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <Row>\n            <ContactLabelProperty field={field} type={type} first={first} />\n            <Field className=\"w100 pt0-5\">\n                <span className=\"mr0-5\">{getContent()}</span>\n                {getActions()}\n            </Field>\n        </Row>\n    );\n};\n\nContactViewProperty.propTypes = {\n    property: PropTypes.object.isRequired,\n    contactID: PropTypes.string\n};\n\nexport default ContactViewProperty;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { c } from 'ttag';\nimport { Icon, useContactEmails, useContactGroups } from 'react-components';\nimport { toMap } from 'proton-shared/lib/helpers/object';\nimport { normalize } from 'proton-shared/lib/helpers/string';\n\nimport ContactViewProperty from './ContactViewProperty';\nimport { OTHER_INFORMATION_FIELDS } from '../constants';\n\nconst ICONS = {\n    email: 'email',\n    tel: 'phone',\n    adr: 'address',\n    other: 'info'\n};\n\nconst ContactViewProperties = ({ properties: allProperties, contactID, field }) => {\n    const TITLES = {\n        email: c('Title').t`Email addresses`,\n        tel: c('Title').t`Phone numbers`,\n        adr: c('Title').t`Addresses`,\n        other: c('Title').t`Other information`\n    };\n\n    const [contactEmails] = useContactEmails();\n    const [contactGroups] = useContactGroups();\n    const mapContactGroups = toMap(contactGroups);\n    const filteredContactEmails = contactEmails.filter(({ ContactID }) => ContactID === contactID);\n    const title = field ? TITLES[field] : TITLES.other;\n    const iconName = field ? ICONS[field] : ICONS.other;\n    const toExclude = ['photo', 'org', 'logo'];\n    const fields = field ? [field] : OTHER_INFORMATION_FIELDS.filter((field) => !toExclude.includes(field));\n    const properties = allProperties\n        .filter(({ field }) => fields.includes(field))\n        .map((property) => {\n            if (field === 'email') {\n                const email = Array.isArray(property.value) ? property.value[0] : property.value;\n                const { LabelIDs = [] } =\n                    filteredContactEmails.find(({ Email = '' }) => normalize(Email) === normalize(email)) || {};\n\n                return {\n                    ...property,\n                    contactGroups: LabelIDs.map((labelID) => mapContactGroups[labelID])\n                };\n            }\n            return property;\n        });\n\n    if (!properties.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"border-bottom mb1 pl1 pr1\">\n            <h3 className=\"mb1\">\n                <Icon name={iconName} /> {title}\n            </h3>\n            {properties.map((property, index) => {\n                return <ContactViewProperty key={index.toString()} property={property} contactID={contactID} />;\n            })}\n        </div>\n    );\n};\n\nContactViewProperties.propTypes = {\n    properties: PropTypes.array,\n    contactID: PropTypes.string,\n    field: PropTypes.string\n};\n\nexport default ContactViewProperties;\n","import React from 'react';\nimport { c } from 'ttag';\nimport PropTypes from 'prop-types';\nimport { useModals, useUser, PrimaryButton, Button } from 'react-components';\nimport downloadFile from 'proton-shared/lib/helpers/downloadFile';\n\nimport ContactModal from './ContactModal';\nimport { toICAL } from '../helpers/vcard';\nimport ContactSummary from './ContactSummary';\nimport ContactViewProperties from './ContactViewProperties';\nimport ContactPromote from './ContactPromote';\n\nconst ContactView = ({ properties, contactID, errors }) => {\n    const { createModal } = useModals();\n    const [{ hasPaidMail }] = useUser();\n\n    const openContactModal = () => {\n        createModal(<ContactModal properties={properties} contactID={contactID} />);\n    };\n\n    const handleExport = () => {\n        const filename = properties\n            .filter(({ field }) => ['fn', 'email'].includes(field))\n            .map(({ value }) => (Array.isArray(value) ? value[0] : value))[0];\n        const vcard = toICAL(properties);\n        const blob = new Blob([vcard.toString()], { type: 'data:text/plain;charset=utf-8;' });\n\n        downloadFile(blob, `${filename}.vcf`);\n    };\n\n    return (\n        <div className=\"view-column-detail flex-item-fluid scroll-if-needed\">\n            <div className=\"flex flex-spacebetween flex-items-center border-bottom\">\n                <div className=\"p1\">\n                    <h2 className=\"m0\">{c('Title').t`Contact details`}</h2>\n                </div>\n                <div className=\"p1\">\n                    <PrimaryButton onClick={openContactModal} className=\"mr1\">{c('Action').t`Edit`}</PrimaryButton>\n                    <Button onClick={handleExport}>{c('Action').t`Export`}</Button>\n                </div>\n            </div>\n            <ContactSummary properties={properties} />\n            <div className=\"pl1 pr1\">\n                <ContactViewProperties contactID={contactID} properties={properties} field=\"email\" />\n                {hasPaidMail ? (\n                    <>\n                        <ContactViewProperties contactID={contactID} properties={properties} field=\"tel\" />\n                        <ContactViewProperties contactID={contactID} properties={properties} field=\"adr\" />\n                        <ContactViewProperties contactID={contactID} properties={properties} />\n                    </>\n                ) : (\n                    <div className=\"mb1 pl1 pr1\">\n                        <ContactPromote />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst ContactPropertyPropTypes = PropTypes.shape({\n    value: PropTypes.oneOf(PropTypes.string, PropTypes.arrayOf(PropTypes.string)),\n    type: PropTypes.string,\n    group: PropTypes.string,\n    field: PropTypes.string\n});\n\nContactView.propTypes = {\n    contactID: PropTypes.string,\n    properties: PropTypes.arrayOf(ContactPropertyPropTypes),\n    errors: PropTypes.array\n};\n\nexport default ContactView;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getContact } from 'proton-shared/lib/api/contacts';\nimport { useApi, Loader } from 'react-components';\nimport { CONTACT_CARD_TYPE } from 'proton-shared/lib/constants';\nimport { getMessage, decryptMessage, getSignature, verifyMessage, createCleartextMessage } from 'pmcrypto';\n\nimport { merge, parse } from '../helpers/vcard';\nimport ContactView from './ContactView';\n\nconst { CLEAR_TEXT, ENCRYPTED_AND_SIGNED, ENCRYPTED, SIGNED } = CONTACT_CARD_TYPE;\nconst SIGNATURED_NOT_VERIFIED = 1;\nconst FAIL_TO_READ = 2;\nconst FAIL_TO_LOAD = 3;\n\nconst decryptSigned = async ({ Data, Signature }, { publicKeys, privateKeys }) => {\n    try {\n        const [message, signature] = await Promise.all([getMessage(Data), getSignature(Signature)]);\n        const { data, verified } = await decryptMessage({\n            message,\n            privateKeys,\n            publicKeys,\n            armor: true,\n            signature\n        });\n\n        if (verified !== 1) {\n            return { data, error: SIGNATURED_NOT_VERIFIED };\n        }\n\n        return { data };\n    } catch (error) {\n        return { error: FAIL_TO_READ };\n    }\n};\n\nconst signed = async ({ Data, Signature }, { publicKeys }) => {\n    try {\n        const signature = await getSignature(Signature);\n        const { verified } = await verifyMessage({\n            message: createCleartextMessage(Data),\n            publicKeys,\n            signature\n        });\n\n        if (verified !== 1) {\n            return { data: Data, error: SIGNATURED_NOT_VERIFIED };\n        }\n        return { data: Data };\n    } catch (error) {\n        return { error: FAIL_TO_READ };\n    }\n};\n\nconst decrypt = async ({ Data }, { privateKeys }) => {\n    try {\n        const message = await getMessage(Data);\n        const data = await decryptMessage({ message, privateKeys, armor: true });\n        return { data };\n    } catch (error) {\n        return { error: FAIL_TO_READ };\n    }\n};\n\nconst clearText = ({ Data }) => Data;\n\nconst ACTIONS = {\n    [ENCRYPTED_AND_SIGNED]: decryptSigned,\n    [SIGNED]: signed,\n    [ENCRYPTED]: decrypt,\n    [CLEAR_TEXT]: clearText\n};\n\nconst prepareContact = async (contact, keys) => {\n    const { Cards } = contact;\n    const data = await Promise.all(\n        Cards.map((card) => {\n            if (!ACTIONS[card.Type]) {\n                return { error: FAIL_TO_READ };\n            }\n            return ACTIONS[card.Type](card, keys);\n        })\n    );\n    const { vcards, errors } = data.reduce(\n        (acc, { data, error }) => {\n            if (error) {\n                acc.errors.push(error);\n            }\n            if (data) {\n                acc.vcards.push(data);\n            }\n            return acc;\n        },\n        { vcards: [], errors: [] }\n    );\n    return { properties: merge(vcards.map(parse)), errors };\n};\n\nconst Contact = ({ contactID, userKeysList }) => {\n    const api = useApi();\n    const [loading, setLoading] = useState(true);\n    const [model, setModel] = useState({ properties: [], errors: [] });\n    const { properties, errors } = model;\n    const { publicKeys, privateKeys } = userKeysList.reduce(\n        (acc, { privateKey }) => {\n            if (!privateKey.isDecrypted()) {\n                return acc;\n            }\n            acc.publicKeys.push(privateKey.toPublic());\n            acc.privateKeys.push(privateKey);\n            return acc;\n        },\n        { publicKeys: [], privateKeys: [] }\n    );\n\n    const request = async () => {\n        try {\n            setLoading(true);\n            const { Contact } = await api(getContact(contactID));\n            const { properties, errors } = await prepareContact(Contact, { publicKeys, privateKeys });\n            setModel({ properties, errors });\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            setModel({ ...model, errors: [FAIL_TO_LOAD] });\n            throw error;\n        }\n    };\n\n    useEffect(() => {\n        if (Array.isArray(userKeysList)) {\n            request();\n        }\n    }, [contactID, userKeysList]);\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    return <ContactView properties={properties} contactID={contactID} errors={errors} />;\n};\n\nContact.propTypes = {\n    contactID: PropTypes.string.isRequired,\n    userKeysList: PropTypes.array\n};\n\nexport default Contact;\n","import React from 'react';\nimport { c } from 'ttag';\nimport { PrimaryButton } from 'react-components';\nimport { Link } from 'react-router-dom';\n\nconst ContactPlaceholder = () => {\n    const handleImport = () => {};\n    const handleExport = () => {};\n\n    return (\n        <div className=\"p2\">\n            <div className=\"aligncenter\">\n                <h1>{c('Title').t`Contacts`}</h1>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at tristique mauris, non eleifend\n                    orci. Etiam pharetra consequat tristique. Sed tristique ipsum quis suscipit ullamcorper.\n                </p>\n            </div>\n            <div className=\"flex-autogrid\">\n                <div className=\"flex-autogrid-item\">\n                    <div className=\"p1 aligncenter bordered-container\">\n                        <div className=\"bold\">{c('Title').t`Import contacts`}</div>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at tristique mauris, non\n                            eleifend orci. Etiam pharetra consequat tristique. Sed tristique ipsum quis suscipit\n                            ullamcorper.\n                        </p>\n                        <PrimaryButton onClick={handleImport}>{c('Action').t`Import`}</PrimaryButton>\n                    </div>\n                </div>\n                <div className=\"flex-autogrid-item\">\n                    <div className=\"p1 aligncenter bordered-container\">\n                        <div className=\"bold\">{c('Title').t`Export contacts`}</div>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at tristique mauris, non\n                            eleifend orci. Etiam pharetra consequat tristique. Sed tristique ipsum quis suscipit\n                            ullamcorper.\n                        </p>\n                        <PrimaryButton onClick={handleExport}>{c('Action').t`Export`}</PrimaryButton>\n                    </div>\n                </div>\n                <div className=\"flex-autogrid-item\">\n                    <div className=\"p1 aligncenter bordered-container\">\n                        <div className=\"bold\">{c('Title').t`Contacts settings`}</div>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean at tristique mauris, non\n                            eleifend orci. Etiam pharetra consequat tristique. Sed tristique ipsum quis suscipit\n                            ullamcorper.\n                        </p>\n                        <Link className=\"pm-button pm-button--primary\" to=\"/settings/account\">{c('Action')\n                            .t`Settings`}</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ContactPlaceholder;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Loader, useContactEmails, useContacts, useUser, useUserKeys } from 'react-components';\n\nimport ContactsList from '../components/ContactsList';\nimport Contact from '../components/Contact';\nimport ContactPlaceholder from '../components/ContactPlaceholder';\n\nconst ContactsContainer = () => {\n    const [contactEmails, loadingContactEmails] = useContactEmails();\n    const [contacts, loadingContacts] = useContacts();\n    const [checkedContacts, setCheckedContacts] = useState(Object.create(null));\n    const [user] = useUser();\n    const [userKeysList, loadingUserKeys] = useUserKeys(user);\n\n    if (loadingContactEmails || loadingContacts || loadingUserKeys) {\n        return <Loader />;\n    }\n\n    const handleCheck = (contactIDs, checked) => {\n        const update = contactIDs.reduce((acc, contactID) => {\n            acc[contactID] = checked;\n            return acc;\n        }, Object.create(null));\n        setCheckedContacts({ ...checkedContacts, ...update });\n    };\n\n    const formattedContacts = contacts.map((contact) => {\n        const { ID } = contact;\n        const emails = contactEmails.filter(({ ContactID }) => ContactID === ID).map(({ Email }) => Email);\n        return { ...contact, emails, isChecked: !!checkedContacts[ID] };\n    });\n\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route\n                        path=\"/contacts/:id\"\n                        component={({ match }) => {\n                            return (\n                                <>\n                                    <ContactsList\n                                        contactID={match.params.id}\n                                        contacts={formattedContacts}\n                                        onCheck={handleCheck}\n                                    />\n                                    <Contact contactID={match.params.id} userKeysList={userKeysList} />\n                                </>\n                            );\n                        }}\n                    />\n                    <Route\n                        component={() => {\n                            return (\n                                <>\n                                    <ContactsList contacts={formattedContacts} onCheck={handleCheck} />\n                                    <ContactPlaceholder />\n                                </>\n                            );\n                        }}\n                    />\n                </Switch>\n            </Router>\n        </>\n    );\n};\n\nexport default ContactsContainer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { hot } from 'react-hot-loader/root';\nimport { ErrorBoundary } from 'react-components';\n\nimport AuthLayout from './AuthLayout.js';\nimport ContactsContainer from '../containers/ContactsContainer';\n\nconst NotFoundContainer = () => <h1>Not found</h1>;\n\nconst Routes = () => {\n    return (\n        <Router>\n            <AuthLayout>\n                <Route\n                    render={({ location }) => (\n                        <ErrorBoundary key={location.key}>\n                            <Switch>\n                                <Route path=\"/contacts\" component={ContactsContainer} />\n                                <Route component={NotFoundContainer} />\n                            </Switch>\n                        </ErrorBoundary>\n                    )}\n                />\n            </AuthLayout>\n        </Router>\n    );\n};\n\nexport default hot(Routes);\n"],"sourceRoot":""}